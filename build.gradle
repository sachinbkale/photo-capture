buildscript {
	ext {
		springBootVersion = '1.5.2.RELEASE'
		gradleDockerVersion = '1.2'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("se.transmode.gradle:gradle-docker:${gradleDockerVersion}")
         	classpath("org.codehaus.groovy:groovy-backports-compat23:2.3.5")
	}
}
group = 'sachinkale'
apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

jar {
	baseName = 'photo-capture'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
}
docker {
    baseImage "ubuntu"
    maintainer 'Sachin Kale "sachin.b.kale@gmail.com"'
}
dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile group: 'junit', name: 'junit', version: '4.12'
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('com.github.sarxos:webcam-capture:0.3.10')
    compile("org.springframework.boot:spring-boot-devtools")
    compile("org.apache.tomcat.embed:tomcat-embed-jasper")
    testCompile("org.springframework.boot:spring-boot-starter-test")
}

bootRun {
    addResources = true
}

springBoot {
    mainClass = "com.cronos.posidon.CronosWebApplication"
}

task buildDocker(type: Docker, dependsOn: build) {
  push = true
  applicationName = jar.baseName
  dockerfile = file('Dockerfile')
  doFirst {
    copy {
      from jar
      into stageDir
    }
  }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.4' //we
 }
